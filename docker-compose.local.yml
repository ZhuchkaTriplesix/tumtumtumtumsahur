version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports: [ "9092:9092", "29092:29092" ]
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 40s
    depends_on:
      zookeeper:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181 | grep Mode"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  api_service:
    build:
      context: ./api
    ports: [ "8000:8000" ]
    restart: unless-stopped
    environment:
      KAFKA_BROKERS: "kafka:9092"
      UVICORN_HOST: "127.0.0.1"
      UVICORN_PORT: "8000"
      MONGO_URL: "mongodb://root:example@mongodb:27017"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    depends_on:
      kafka:
        condition: service_healthy

  database_service:
    build:
      context: ./database_service
    environment:
      KAFKA_BROKERS: "kafka:9092"
      MONGODB_URI: "mongodb://root:example@mongodb:27017"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "from motor.motor_asyncio import AsyncIOMotorClient; import asyncio; asyncio.run(AsyncIOMotorClient('mongodb://root:example@mongodb:27017').server_info())"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  mongodb:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--username=root", "--password=example", "--authenticationDatabase=admin"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      mongodb:
        condition: service_healthy

volumes:
  mongodb_data: